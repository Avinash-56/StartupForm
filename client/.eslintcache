[{"C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\index.js":"1","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\App.js":"3","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\components\\layout\\Landing.js":"4","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\store.js":"5","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\reducers\\index.js":"6","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\reducers\\alert.js":"7","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\reducers\\auth.js":"8","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\actions\\types.js":"9","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\components\\auth\\Login.js":"10","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\components\\auth\\IncubatorLogin.js":"11","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\components\\auth\\UserLogin.js":"12","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\components\\auth\\Register.js":"13","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\actions\\auth.js":"14","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\actions\\alert.js":"15","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\utils\\setAuthToken.js":"16","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\components\\layout\\Alert.js":"17","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\reducers\\startup.js":"18","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\components\\startup\\Startup.js":"19","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\actions\\startup.js":"20","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\components\\layout\\Spinner.js":"21","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\components\\dashboard\\Dashboard.js":"22","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\components\\layout\\NavBar.js":"23","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\utils\\PrivateRoute.js":"24","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\components\\startup\\StartupForm.js":"25","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\components\\startup\\StartupItem.js":"26","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\components\\dashboard\\AdminDashboard.js":"27","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\components\\layout\\NavBarAdmin.js":"28","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\components\\startups\\Startups.js":"29","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\components\\startups\\StartupsItems.js":"30","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\components\\startups\\StartupWithId.js":"31"},{"size":478,"mtime":1607234926541,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":499162500000,"results":"34","hashOfConfig":"33"},{"size":2255,"mtime":1607332388890,"results":"35","hashOfConfig":"33"},{"size":1329,"mtime":1607329676713,"results":"36","hashOfConfig":"33"},{"size":1002,"mtime":1607235450015,"results":"37","hashOfConfig":"33"},{"size":205,"mtime":1607251172302,"results":"38","hashOfConfig":"33"},{"size":500,"mtime":1607329543305,"results":"39","hashOfConfig":"33"},{"size":1175,"mtime":1607264457262,"results":"40","hashOfConfig":"33"},{"size":769,"mtime":1607329439478,"results":"41","hashOfConfig":"33"},{"size":2149,"mtime":1607264944905,"results":"42","hashOfConfig":"33"},{"size":911,"mtime":1607331443651,"results":"43","hashOfConfig":"33"},{"size":1076,"mtime":1607332360611,"results":"44","hashOfConfig":"33"},{"size":2936,"mtime":1607264991954,"results":"45","hashOfConfig":"33"},{"size":2857,"mtime":1607323661216,"results":"46","hashOfConfig":"33"},{"size":457,"mtime":1607329494062,"results":"47","hashOfConfig":"33"},{"size":253,"mtime":1607244421248,"results":"48","hashOfConfig":"33"},{"size":484,"mtime":1607279614286,"results":"49","hashOfConfig":"33"},{"size":1085,"mtime":1607323010092,"results":"50","hashOfConfig":"33"},{"size":1701,"mtime":1607320059672,"results":"51","hashOfConfig":"33"},{"size":2613,"mtime":1607327008959,"results":"52","hashOfConfig":"33"},{"size":274,"mtime":1603664386996,"results":"53","hashOfConfig":"33"},{"size":1040,"mtime":1607319570087,"results":"54","hashOfConfig":"33"},{"size":849,"mtime":1607264713572,"results":"55","hashOfConfig":"33"},{"size":654,"mtime":1607257753119,"results":"56","hashOfConfig":"33"},{"size":5607,"mtime":1607320297662,"results":"57","hashOfConfig":"33"},{"size":2568,"mtime":1607329171073,"results":"58","hashOfConfig":"33"},{"size":889,"mtime":1607324320309,"results":"59","hashOfConfig":"33"},{"size":1005,"mtime":1607324218663,"results":"60","hashOfConfig":"33"},{"size":739,"mtime":1607328970279,"results":"61","hashOfConfig":"33"},{"size":502,"mtime":1607330165349,"results":"62","hashOfConfig":"33"},{"size":2987,"mtime":1607330706183,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"5etsrr",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"66"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"66"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"66"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"66"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"66"},"C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\index.js",[],["147","148"],"C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\App.js",["149"],"C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\components\\layout\\Landing.js",["150","151"],"import React , {useEffect}from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport {removeAlert} from '../../actions/alert'\r\n\r\nconst Landing = ({ isAuthenticated, removeAlert }) => {\r\n  useEffect(()=>{\r\n   removeAlert()\r\n  })\r\n\r\n  return (\r\n    <section className=\"landing\">\r\n      <div className=\"dark-overlay\">\r\n        <div className=\"landing-inner\">\r\n          <h1 className=\"x-large\">Startup Founder</h1>\r\n          <p className=\"lead\">\r\n            Welcome, we give wings to your ambitions \r\n          </p>\r\n          <div className=\"buttons\">\r\n            <Link to=\"/register\" className=\"btn btn-primary\">\r\n              Sign Up\r\n            </Link>\r\n            <Link to=\"/login\" className=\"btn btn-light\">\r\n              Login\r\n            </Link>\r\n            <br/>\r\n            <br/>\r\n\r\n            <p className=\"landing-admin\">\r\n            Incubator? Please click<Link to='/admin-login'> Here </Link>\r\n          </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\n// Landing.propTypes = {\r\n//   isAuthenticated: PropTypes.bool\r\n// };\r\n\r\n// const mapStateToProps = state => ({\r\n//   isAuthenticated: state.auth.isAuthenticated\r\n// });\r\n\r\nexport default connect(null, {removeAlert})(Landing);\r\n","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\store.js",["152"],"import {createStore, applyMiddleware} from 'redux'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducers from './reducers'\r\n\r\n\r\nfunction saveToLocalStorage(state){\r\n    try {\r\n        const serializedState = JSON.stringify(state)\r\n        localStorage.setItem('state', serializedState)\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nfunction loadFromLocalStorage(){\r\n    try {\r\n        const serializedState = localStorage.getItem('state')\r\n        if(serializedState=== null) return undefined\r\n        return JSON.parse(serializedState)\r\n\r\n    } catch (err) {\r\n        console.log(err)\r\n        return undefined\r\n    }\r\n}\r\n\r\nconst initialState = {}\r\n\r\nconst middleware = [thunk]\r\nconst persistedState = loadFromLocalStorage()\r\nconst store = createStore(\r\nrootReducers,\r\npersistedState,\r\ncomposeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nstore.subscribe(()=>saveToLocalStorage(store.getState()))\r\n\r\nexport default store","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\reducers\\index.js",[],"C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\reducers\\alert.js",["153"],"import {SET_ALERT, REMOVE_ALERT, CLEAN_ALERT} from '../actions/types'\r\n\r\nconst initialState = []\r\n\r\nexport default (state = initialState, action)=>{\r\n    const {payload, type} = action\r\n    switch (type) {\r\n        case SET_ALERT:\r\n            return [...state, payload]\r\n        \r\n        case REMOVE_ALERT:\r\n            return state.filter(alert=>alert.id !== payload)\r\n        \r\n        case CLEAN_ALERT:\r\n          return []    \r\n            \r\n        default:\r\n            return state\r\n    }\r\n}","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\reducers\\auth.js",["154"],"import {USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, REGISTER_FAIL, REGISTER_SUCCESS} from '../actions/types'\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem(\"token\"),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: null\r\n  };\r\n\r\n  export default (state = initialState, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n      case USER_LOADED:\r\n        return {\r\n          ...state,\r\n          isAuthenticated: true,\r\n          loading: false,\r\n          user: payload\r\n        };\r\n  \r\n      case REGISTER_SUCCESS:\r\n      case LOGIN_SUCCESS:\r\n        localStorage.setItem(\"token\", payload.token);\r\n        return {\r\n          ...state,\r\n          ...payload,\r\n          isAuthenticated: true\r\n        };\r\n      case REGISTER_FAIL:\r\n      case AUTH_ERROR:\r\n      case LOGIN_FAIL:\r\n    //   case LOGOUT:\r\n    //   case ACCOUNT_DEETED:\r\n        localStorage.removeItem(\"token\");\r\n        return {\r\n          ...state,\r\n          token: null,\r\n          isAuthenticated: false,\r\n          loading: false,\r\n          user: null\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n    ",["155","156"],"C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\actions\\types.js",[],"C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\components\\auth\\Login.js",["157"],"import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { loadUser, userLogin, adminLogin } from \"../../actions/auth\";\r\nimport {connect} from 'react-redux'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {Navbar} from 'react-bootstrap'\r\n\r\nconst Login = ({ loadUser, userLogin, adminLogin , location}) => {\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const { email, password } = formData;\r\n\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n  const onSubmit = (e) => {\r\n      e.preventDefault()\r\n    if (location.pathname == \"/login\") {\r\n        userLogin(email, password)\r\n    } else {\r\n        adminLogin(email, password)\r\n    \r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Form className=\"login-form\" onSubmit={(e) => onSubmit(e)}>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <Form.Text className=\"text-muted\"></Form.Text>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicPassword\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n        <Navbar.Brand className='login-back btn btn-secondary' href=\"/\">Home</Navbar.Brand>\r\n\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n    loadUser :PropTypes.func.isRequired,\r\n    adminLogin: PropTypes.func.isRequired,\r\n    userLogin: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapActionToProps = {\r\n  loadUser,\r\n  adminLogin,\r\n  userLogin,\r\n};\r\n\r\nexport default withRouter(connect(null, mapActionToProps)(Login));\r\n","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\components\\auth\\IncubatorLogin.js",["158","159"],"import React, {useEffect} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Login from \"./Login\";\r\n// import { loadUser } from \"../../actions/auth\";\r\nimport {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nconst IncubatorLogin = ({isAuthenticated}) => {\r\n    if(isAuthenticated){\r\n        return <Redirect to='/admin-dashboard'/>\r\n }\r\n  return (\r\n    <div>\r\n        <h5>Email: admin1@gmail.com </h5>\r\n        <h5>Password: admin123</h5>\r\n      <Login />\r\n\r\n      <h3 className='heading'>\r\n        Sign as the the Incubator. You can view all the startups registered on the platform\r\n      </h3>\r\n\r\n      {/* <img src={IncubatorLoginImage} className='image'></img> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nIncubatorLogin.propTypes = {};\r\n\r\nconst mapSTateToProps = state =>({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapSTateToProps)(IncubatorLogin) ;\r\n","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\components\\auth\\UserLogin.js",["160","161"],"C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\components\\auth\\Register.js",["162"],"import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { register } from \"../../actions/auth\";\r\nimport {Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {Navbar} from 'react-bootstrap'\r\n\r\n\r\nconst Register = ({register, isAuthenticated}) => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n  });\r\n\r\n  const { name, email, password, password2 } = formData;\r\n\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n  if(isAuthenticated){\r\n      return <Redirect to='/user-dashboard'/>\r\n  }\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    register({ name, email, password });\r\n  };\r\n  return (\r\n    <div>\r\n      <Form className=\"login-form\" onSubmit={(e) => onSubmit(e)}>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter Email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <Form.Text className=\"text-muted\"></Form.Text>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formBasicName\">\r\n          <Form.Label>Your Name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter your Name\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <Form.Text className=\"text-muted\"></Form.Text>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formBasicPassword\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter Password(min 8 characters)\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <Form.Text className=\"text-muted\"></Form.Text>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicPassword\">\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Confirm Your Password\"\r\n            name=\"password2\"\r\n            value={password2}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n        <Navbar.Brand className='login-back btn btn-secondary' href=\"/\">Home</Navbar.Brand>\r\n      </Form>\r\n      <h3 className=\"heading\">\r\n        Sign as the the Founder. You can register your startup\r\n      </h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nRegister.propTypes = {};\r\n\r\nconst mapStateToProps = state =>({\r\n    isAuthenticated : state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps, {register})(Register);\r\n","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\actions\\auth.js",["163"],"import { USER_LOADED, AUTH_ERROR, LOGIN_FAIL, LOGIN_SUCCESS , LOGOUT, CLEAR_STARTUP, REGISTER_SUCCESS, REGISTER_FAIL, CLEAR_STARTUPS, LOAD_STARTUPS} from \"./types\";\r\nimport axios from \"axios\";\r\nimport {setAlert} from './alert'\r\nimport setAuthToken from '../utils/setAuthToken'\r\nimport {getAllStartups} from './startup'\r\n\r\nexport const loadUser = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n  try {\r\n    const res = await axios.get(\"/api/auth\");\r\n\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\nexport const userLogin = (email, password) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axios.post(\"/api/auth\", body, config);\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n      console.log(err.response.data)\r\n    const errors = err.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const adminLogin = (email, password) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    dispatch(getAllStartups())\r\n\r\n    const res = await axios.post(\"/api/auth/admin\", body, config);\r\n    dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    console.log(errors)\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const register = ({ name, email, password }) => async dispatch => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n  \r\n    const body = JSON.stringify({ name, email, password });\r\n    try {\r\n      const res = await axios.post(\"/api/auth/register\", body, config);\r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n        payload: res.data\r\n      });\r\n      dispatch(loadUser());\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n      if (errors) {\r\n        errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n      }\r\n      dispatch({\r\n        type: REGISTER_FAIL\r\n      });\r\n    }\r\n  };\r\n\r\n    export const logout = () => dispatch => {\r\n        dispatch({ type: CLEAR_STARTUP });\r\n        dispatch({type: CLEAR_STARTUPS})\r\n        dispatch({ type: LOGOUT });\r\n    };","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\actions\\alert.js",[],"C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\components\\layout\\Alert.js",[],"C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\reducers\\startup.js",["164"],"import {CLEAR_STARTUP, GET_STARTUP, STARTUP_ERROR, ADMIN_ERROR_STARTUP, LOAD_STARTUPS, CLEAR_STARTUPS} from '../actions/types'\r\n\r\nconst initialState = {\r\n    startup: null,\r\n    startups: [],\r\n    loading: true,\r\n    errors: {}\r\n}\r\n\r\nexport default function(state= initialState, action){\r\n  const {type, payload} = action\r\n\r\n  switch (type) {\r\n      case GET_STARTUP:\r\n          return{\r\n              ...state,\r\n              startup: payload,\r\n              loading: false\r\n          }\r\n       \r\n        case STARTUP_ERROR:\r\n        case CLEAR_STARTUP:    \r\n            return{\r\n              ...state,\r\n              startup: null,\r\n              loading: false,\r\n              errors: payload\r\n            }\r\n        case LOAD_STARTUPS:\r\n          return{\r\n            ...state,\r\n            startups: payload,\r\n            loading: false\r\n          }\r\n        case ADMIN_ERROR_STARTUP:\r\n          case CLEAR_STARTUPS:\r\n          return{\r\n            ...state,\r\n            startups: [],\r\n            loading: false\r\n          } \r\n  \r\n      default:\r\n          return state\r\n  }\r\n}","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\components\\startup\\Startup.js",["165","166","167","168"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getUserStartup } from \"../../actions/startup\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NavBar from \"../layout/NavBar\";\r\nimport StartupForm from \"./StartupForm\";\r\nimport StartupItem from \"./StartupItem\";\r\n\r\nconst Startup = ({ startup: { startup, loading }, auth, getUserStartup }) => {\r\n  const [show, changeShow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getUserStartup();\r\n  }, [getUserStartup]);\r\n  return (\r\n    <div>\r\n      {/* {loading ? (\r\n        startup == null(<Spinner />)\r\n      ) : (\r\n        <div>\r\n          <NavBar />\r\n          {startup !== null ? (\r\n            <StartupItem key={startup._id} startup={startup} />\r\n          ) : (\r\n            <h1 className=\"no-info\">\r\n              No information available{\" \"}\r\n              <Link to='startup/form' onClick={() => changeShow(!show)}>Click here</Link>\r\n            </h1>\r\n          )}\r\n        </div>\r\n      )} */}\r\n      {startup == null && !loading ? (\r\n          <div>\r\n         <NavBar/> \r\n        <h1 className=\"no-info\">\r\n          No information available{\" \"}\r\n          <Link to=\"startup/form\" onClick={() => changeShow(!show)}>\r\n            Click here\r\n          </Link>\r\n        </h1>\r\n        </div>\r\n      ) : (\r\n        <StartupItem key={startup._id} startup={startup}></StartupItem>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nStartup.propTypes = {};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  startup: state.startup,\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUserStartup })(Startup);\r\n","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\actions\\startup.js",[],"C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\components\\layout\\Spinner.js",["169"],"import React, {Fragment} from 'react'\r\nimport spinner from './spinner.gif'\r\n\r\nexport default() => {\r\n    return (\r\n        <Fragment>\r\n            <img src={spinner} style={{width:'200px', margin:'auto', display: 'block'}} alt='Loading...'/>\r\n        </Fragment>\r\n    )\r\n}\r\n","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\components\\dashboard\\Dashboard.js",["170","171","172","173","174","175"],"import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loadUser } from \"../../actions/auth\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport { Row, Col, Container } from \"react-bootstrap\";\r\nimport NavBar from \"../layout/NavBar\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { getUserStartup } from \"../../actions/startup\";\r\n\r\nconst Dashboard = ({ auth: { user, loading }, loadUser }) => {\r\n  useEffect(() => {\r\n    loadUser() \r\n  }, []);\r\n  useEffect(()=>{\r\n    getUserStartup();\r\n  }, [])\r\n  return (\r\n    <div>\r\n      {loading || user == null ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <NavBar />\r\n          <br />\r\n          <p className=\"username\">Welcome {user && user.name}</p>\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loadUser, getUserStartup })(\r\n  Dashboard\r\n);\r\n","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\components\\layout\\NavBar.js",["176"],"import React from \"react\";\r\nimport { Navbar, Button, Form , FormControl, Nav} from \"react-bootstrap\";\r\nimport {logout} from '../../actions/auth'\r\nimport {connect } from 'react-redux'\r\n\r\nconst NavBar = ({logout}) => {\r\n  const onClick = e =>{\r\n   logout()\r\n}\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Navbar bg=\"light\" expand=\"lg\">\r\n        <Navbar.Brand className='nav-dash' href=\"/startup\">Your Startup</Navbar.Brand>\r\n        <Nav.Link href=\"/user-dashboard\" className= 'home-dash'>Home</Nav.Link>\r\n        <Form inline>\r\n          <Button className = \"logout-button btn-danger\"\r\n            variant=\"outline-success\"\r\n            onClick={(e) => {\r\n              onClick(e);\r\n            }}\r\n          >\r\n            Logout\r\n          </Button>\r\n        </Form>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, {logout})(NavBar);\r\n","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\utils\\PrivateRoute.js",[],"C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\components\\startup\\StartupForm.js",["177","178","179"],"import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form, Button, InputGroup, FormControl } from \"react-bootstrap\";\r\nimport { addStartup } from \"../../actions/startup\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst StartupForm = ({ addStartup, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    website: \"\",\r\n    stage: \"\",\r\n    profit: \"\",\r\n    bio: \"\",\r\n    founder: \"\",\r\n    founded: \"\",\r\n    fOrb: \"\",\r\n    address: \"\",\r\n    registrationNumber: \"\",\r\n  });\r\n\r\n  let {\r\n    name,\r\n    website,\r\n    stage,\r\n    profit,\r\n    founded,\r\n    bio,\r\n    fOrb,\r\n    address,\r\n    registrationNumber,\r\n    founder,\r\n  } = formData;\r\n\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    addStartup(formData, history);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Fill out the Form. Each field is required</h2>\r\n      <br />\r\n      <Form onSubmit={(e) => onSubmit(e)}>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type=\"string\"\r\n            placeholder=\"Enter the name of the company\"\r\n            value={name}\r\n            name=\"name\"\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <Form.Text className=\"text-muted\"></Form.Text>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicString\">\r\n          <Form.Label>Website or App Link</Form.Label>\r\n          <Form.Control\r\n            type=\"string\"\r\n            placeholder=\"Website\"\r\n            value={website}\r\n            name=\"website\"\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formBasicString\">\r\n          <Form.Label>Name of the Founder</Form.Label>\r\n          <Form.Control\r\n            type=\"string\"\r\n            placeholder=\"Founder's Name\"\r\n            value={founder}\r\n            name=\"founder\"\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Stage</Form.Label>\r\n          <Form.Control\r\n            required\r\n            value={stage}\r\n            name=\"stage\"\r\n            as=\"select\"\r\n            className=\"mr-sm-2\"\r\n            id=\"inlineFormCustomSelect\"\r\n            custom\r\n            onChange={(e) => onChange(e)}\r\n          >\r\n            <option value=\"0\">Choose...</option>\r\n            <option value=\"1\">Ideation</option>\r\n            <option value=\"2\">Validation</option>\r\n            <option value=\"3\">Early Traction</option>\r\n            <option value=\"3\">Scaling</option>\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Profit Earned till Now?</Form.Label>\r\n          <Form.Control\r\n            required\r\n            value={profit}\r\n            name=\"profit\"\r\n            as=\"select\"\r\n            className=\"mr-sm-2\"\r\n            id=\"inlineFormCustomSelect\"\r\n            custom\r\n            onChange={(e) => onChange(e)}\r\n          >\r\n            <option value=\"0\">Choose...</option>\r\n            <option value=\"true\">Yes</option>\r\n            <option value=\"false\">No</option>\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Funded or BootStrapped</Form.Label>\r\n          <Form.Control\r\n            required\r\n            value={fOrb}\r\n            name=\"fOrb\"\r\n            as=\"select\"\r\n            className=\"mr-sm-2\"\r\n            id=\"inlineFormCustomSelect\"\r\n            custom\r\n            onChange={(e) => onChange(e)}\r\n          >\r\n            <option value=\"0\">Choose...</option>\r\n            <option value=\"1\">Funded</option>\r\n            <option value=\"2\">BootStrapped</option>\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"dob\">\r\n          <Form.Label>Select Date</Form.Label>\r\n          <Form.Control\r\n          required\r\n            type=\"date\"\r\n            name=\"founded\"\r\n            placeholder=\"Foundation Date\"\r\n            value={founded}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formBasicString\">\r\n          <Form.Label>City and State of your Startup</Form.Label>\r\n          <Form.Control\r\n          required\r\n            type=\"string\"\r\n            placeholder=\"Address\"\r\n            value={address}\r\n            name=\"address\"\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formBasicString\">\r\n          <Form.Label>Something about your Startup</Form.Label>\r\n          <Form.Control\r\n            type=\"string\"\r\n            placeholder=\"About\"\r\n            value={bio}\r\n            name=\"bio\"\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formBasicString\">\r\n          <Form.Label>Registartion Number of your Startup</Form.Label>\r\n          <Form.Control\r\n            type=\"string\"\r\n            placeholder=\"Registartion\"\r\n            value={registrationNumber}\r\n            name=\"registrationNumber\"\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </Form.Group>\r\n        <Button\r\n          variant=\"primary\"\r\n          className=\"login-back btn btn-secondary\"\r\n          type=\"submit\"\r\n        >\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nStartupForm.propTypes = {};\r\n\r\nexport default withRouter(connect(null, { addStartup })(StartupForm));\r\n","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\components\\startup\\StartupItem.js",[],"C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\components\\dashboard\\AdminDashboard.js",["180"],"import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport AdminNavBar from \"../layout/NavBarAdmin\";\r\nimport { getAllStartups } from \"../../actions/startup\";\r\nimport { connect } from \"react-redux\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nconst AdminDashboard = ({ getAllStartups, loading }) => {\r\n  useEffect(() => {\r\n    getAllStartups();\r\n  }, [getAllStartups]);\r\n  return (\r\n    <div>\r\n      <AdminNavBar />\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <h1 className ='admin-homeh1'>\r\n          Hello there, Please Click on the startups button to view ALL Startups\r\n        </h1>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nAdminDashboard.propTypes = {};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  startup: state.startup,\r\n  loading: state.startup.loading,\r\n});\r\nexport default connect(mapStateToProps, { getAllStartups })(AdminDashboard);\r\n","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\components\\layout\\NavBarAdmin.js",["181","182"],"import React from \"react\";\r\nimport { Navbar, Button, Form , FormControl, Nav} from \"react-bootstrap\";\r\nimport {logout} from '../../actions/auth'\r\nimport {connect } from 'react-redux'\r\nimport {getAllStartups} from '../../actions/startup'\r\n\r\nconst AdminNavBar = ({logout, getAllStartups}) => {\r\n  const onClick = e =>{\r\n   logout()\r\n}\r\n\r\nconst onStartups = e =>{\r\n    getAllStartups()\r\n}\r\n\r\n  return (\r\n    <div>\r\n      <Navbar bg=\"light\" expand=\"lg\">\r\n        <Navbar.Brand className='nav-dash' href=\"/startups\" onClick={e=>onStartups(e)}>Startups</Navbar.Brand>\r\n        <Nav.Link href=\"/admin-dashboard\" className= 'home-dash'>Home</Nav.Link>\r\n        <Form inline>\r\n          <Button className = \"logout-button btn-danger\"\r\n            variant=\"outline-success\"\r\n            onClick={(e) => {\r\n              onClick(e);\r\n            }}\r\n          >\r\n            Logout\r\n          </Button>\r\n        </Form>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, {logout})(AdminNavBar);\r\n","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\components\\startups\\Startups.js",["183","184","185"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport StartupsItems from \"./StartupsItems\";\r\nimport {Container} from 'react-bootstrap'\r\nimport AdminNavbar from '../layout/NavBarAdmin'\r\n\r\n\r\nconst Startups = ({ startup: { startups }, loading }) => {\r\n  return (\r\n    <div>\r\n        <AdminNavbar/>\r\n          { \r\n          startups.map((startup) => (\r\n            <StartupsItems key={startup._id} id={startup._id} startup={startup} />\r\n          ))\r\n          }\r\n        </div>\r\n  );\r\n};\r\n\r\nStartups.propTypes = {};\r\nconst mapStateToProps = (state) => ({\r\n  startup: state.startup,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Startups);\r\n","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\components\\startups\\StartupsItems.js",["186"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\n\r\nconst StartupsItems = ({ startup: { user }, id }) => {\r\n  return (\r\n    <div>\r\n      <Row className = 'startrow'>\r\n        <Col>\r\n          <Link to={`/startups/${id}`} className='shead'> {user.name} </Link>\r\n        </Col>\r\n        <Col className='sbody '>{user.email}</Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default StartupsItems;\r\n","C:\\Users\\Avinash\\Documents\\Web Development\\startupInfo\\client\\src\\components\\startups\\StartupWithId.js",["187","188"],"import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getStartup } from \"../../actions/startup\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport { connect } from \"react-redux\";\r\nimport {Col, Row, Container} from 'react-bootstrap'\r\nimport AdminNavbar from '../layout/NavBarAdmin'\r\n\r\n\r\nconst StartupWithId = ({ match, startup, getStartup }) => {\r\n  useEffect(() => {\r\n    getStartup(match.params.id);\r\n  }, [getStartup]);\r\n  return startup == null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <div>\r\n        <AdminNavbar/>\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <h5 className=\"head\">Name:</h5>\r\n          </Col>\r\n          <Col>\r\n            <h5 className=\"content\">{startup.name}</h5>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <h5 className=\"head\">Founder of the comapany:</h5>\r\n          </Col>\r\n          <Col>\r\n            <h5 className=\"content\">{startup.founder}</h5>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <h5 className=\"head\">Website Link:</h5>\r\n          </Col>\r\n          <Col>\r\n            <h5 className=\"content\">{startup.website}</h5>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <h5 className=\"head\">Stage of the Startup:</h5>\r\n          </Col>\r\n          <Col>\r\n            <h5 className=\"content\">{startup.stage}</h5>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <h5 className=\"head\">Profitable?:</h5>\r\n          </Col>\r\n          <Col>\r\n            <h5 className=\"content\">{startup.profit}</h5>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <h5 className=\"head\">Founded on:</h5>\r\n          </Col>\r\n          <Col>\r\n            <h5 className=\"content\">{startup.founded}</h5>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <h5 className=\"head\">Information about the comany:</h5>\r\n          </Col>\r\n          <Col>\r\n            <h5 className=\"content\">{startup.bio}</h5>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <h5 className=\"head\">Funded or Bootstraped?:</h5>\r\n          </Col>\r\n          <Col>\r\n            <h5 className=\"content\">{startup.fOrb}</h5>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <h5 className=\"head\">Address of the Startup:</h5>\r\n          </Col>\r\n          <Col>\r\n            <h5 className=\"content\">{startup.address}</h5>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <h5 className=\"head\">registrationNumber:</h5>\r\n          </Col>\r\n          <Col>\r\n            <h5 className=\"content\">{startup.registrationNumber}</h5>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nStartupWithId.propTypes = {};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  startup: state.startup.startup,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getStartup })(StartupWithId);\r\n",{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","severity":1,"message":"194","line":1,"column":8,"nodeType":"195","messageId":"196","endLine":1,"endColumn":12},{"ruleId":"193","severity":1,"message":"197","line":2,"column":16,"nodeType":"195","messageId":"196","endLine":2,"endColumn":24},{"ruleId":"193","severity":1,"message":"198","line":4,"column":8,"nodeType":"195","messageId":"196","endLine":4,"endColumn":17},{"ruleId":"193","severity":1,"message":"199","line":28,"column":7,"nodeType":"195","messageId":"196","endLine":28,"endColumn":19},{"ruleId":"200","severity":1,"message":"201","line":5,"column":1,"nodeType":"202","endLine":20,"endColumn":2},{"ruleId":"200","severity":1,"message":"201","line":10,"column":3,"nodeType":"202","endLine":45,"endColumn":5},{"ruleId":"189","replacedBy":"203"},{"ruleId":"191","replacedBy":"204"},{"ruleId":"205","severity":1,"message":"206","line":22,"column":27,"nodeType":"207","messageId":"208","endLine":22,"endColumn":29},{"ruleId":"193","severity":1,"message":"209","line":1,"column":16,"nodeType":"195","messageId":"196","endLine":1,"endColumn":25},{"ruleId":"193","severity":1,"message":"198","line":2,"column":8,"nodeType":"195","messageId":"196","endLine":2,"endColumn":17},{"ruleId":"193","severity":1,"message":"209","line":1,"column":17,"nodeType":"195","messageId":"196","endLine":1,"endColumn":26},{"ruleId":"193","severity":1,"message":"198","line":2,"column":8,"nodeType":"195","messageId":"196","endLine":2,"endColumn":17},{"ruleId":"193","severity":1,"message":"198","line":2,"column":8,"nodeType":"195","messageId":"196","endLine":2,"endColumn":17},{"ruleId":"193","severity":1,"message":"210","line":1,"column":135,"nodeType":"195","messageId":"196","endLine":1,"endColumn":148},{"ruleId":"200","severity":1,"message":"211","line":10,"column":1,"nodeType":"202","endLine":46,"endColumn":2},{"ruleId":"193","severity":1,"message":"212","line":1,"column":17,"nodeType":"195","messageId":"196","endLine":1,"endColumn":25},{"ruleId":"193","severity":1,"message":"198","line":2,"column":8,"nodeType":"195","messageId":"196","endLine":2,"endColumn":17},{"ruleId":"193","severity":1,"message":"213","line":5,"column":8,"nodeType":"195","messageId":"196","endLine":5,"endColumn":15},{"ruleId":"193","severity":1,"message":"214","line":8,"column":8,"nodeType":"195","messageId":"196","endLine":8,"endColumn":19},{"ruleId":"200","severity":1,"message":"201","line":4,"column":1,"nodeType":"202","endLine":10,"endColumn":2},{"ruleId":"193","severity":1,"message":"198","line":2,"column":8,"nodeType":"195","messageId":"196","endLine":2,"endColumn":17},{"ruleId":"193","severity":1,"message":"215","line":6,"column":10,"nodeType":"195","messageId":"196","endLine":6,"endColumn":13},{"ruleId":"193","severity":1,"message":"216","line":6,"column":15,"nodeType":"195","messageId":"196","endLine":6,"endColumn":18},{"ruleId":"193","severity":1,"message":"217","line":6,"column":20,"nodeType":"195","messageId":"196","endLine":6,"endColumn":29},{"ruleId":"193","severity":1,"message":"218","line":8,"column":10,"nodeType":"195","messageId":"196","endLine":8,"endColumn":13},{"ruleId":"219","severity":1,"message":"220","line":14,"column":6,"nodeType":"221","endLine":14,"endColumn":8,"suggestions":"222"},{"ruleId":"193","severity":1,"message":"223","line":2,"column":33,"nodeType":"195","messageId":"196","endLine":2,"endColumn":44},{"ruleId":"193","severity":1,"message":"198","line":2,"column":8,"nodeType":"195","messageId":"196","endLine":2,"endColumn":17},{"ruleId":"193","severity":1,"message":"224","line":3,"column":24,"nodeType":"195","messageId":"196","endLine":3,"endColumn":34},{"ruleId":"193","severity":1,"message":"223","line":3,"column":36,"nodeType":"195","messageId":"196","endLine":3,"endColumn":47},{"ruleId":"193","severity":1,"message":"198","line":2,"column":8,"nodeType":"195","messageId":"196","endLine":2,"endColumn":17},{"ruleId":"193","severity":1,"message":"223","line":2,"column":33,"nodeType":"195","messageId":"196","endLine":2,"endColumn":44},{"ruleId":"193","severity":1,"message":"225","line":5,"column":9,"nodeType":"195","messageId":"196","endLine":5,"endColumn":23},{"ruleId":"193","severity":1,"message":"198","line":2,"column":8,"nodeType":"195","messageId":"196","endLine":2,"endColumn":17},{"ruleId":"193","severity":1,"message":"213","line":4,"column":8,"nodeType":"195","messageId":"196","endLine":4,"endColumn":15},{"ruleId":"193","severity":1,"message":"217","line":6,"column":9,"nodeType":"195","messageId":"196","endLine":6,"endColumn":18},{"ruleId":"193","severity":1,"message":"198","line":2,"column":8,"nodeType":"195","messageId":"196","endLine":2,"endColumn":17},{"ruleId":"193","severity":1,"message":"198","line":2,"column":8,"nodeType":"195","messageId":"196","endLine":2,"endColumn":17},{"ruleId":"219","severity":1,"message":"226","line":13,"column":6,"nodeType":"221","endLine":13,"endColumn":18,"suggestions":"227"},"no-native-reassign",["228"],"no-negated-in-lhs",["229"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'PropTypes' is defined but never used.","'initialState' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["228"],["229"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'LOAD_STARTUPS' is defined but never used.","Unexpected default export of anonymous function","'Fragment' is defined but never used.","'Spinner' is defined but never used.","'StartupForm' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Container' is defined but never used.","'Nav' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadUser'. Either include it or remove the dependency array. If 'loadUser' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["230"],"'FormControl' is defined but never used.","'InputGroup' is defined but never used.","'getAllStartups' is defined but never used.","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["231"],"no-global-assign","no-unsafe-negation",{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},"Update the dependencies array to be: [loadUser]",{"range":"236","text":"237"},"Update the dependencies array to be: [getStartup, match.params.id]",{"range":"238","text":"239"},[522,524],"[loadUser]",[442,454],"[getStartup, match.params.id]"]